# validation-en.i18n
#

acme.validation.phoneNumber.message = The phone number must be composed of 6 to 15 digits preceded or not by "+"

acme.validation.airline.IATACode.message = The IATA Code must be unique

acme.validation.customer.identifier.message = The identifier must start with the initials of the customer
acme.validation.customer.identifier.unique.message = The identifier must be unique

acme.validation.booking.locatorCode.message = The Locator Code must be unique
acme.validation.booking.locatorCode.pattern = Must be composed of six to eight upper-case letters and numbers.
acme.validation.booking.lastCardNibble.pattern = Must be composed of four digits.
acme.validation.booking.lastCreditCardNibble.message = To publish a booking, it must store the last nibble of the credit card used to pay
acme.validation.booking.passengers.message = To publish a booking, it must have at least one passenger

acme.validation.bookingRecord.uniquePassengerInBooking.message = This passenger is already on the booking

acme.validation.passenger.passportNumber.pattern = Must be composed of six to nine upper-case letters and digits.

acme.validation.airlineManager.identifierFormat.message = The identifier must start with the initials of the manager
acme.validation.airlineManager.identifierUniqueness.message = The identifier must be unique
acme.validation.airlineManager.identifierPattern.message	= The identifier must include 2-3 upper case letters and 6 digits.

acme.validation.assistanceAgent.employeeCodeFormat.message		= The employee code must start with the initials of the agent
acme.validation.assistanceAgent.employeeCodeUniqueness.message	= The employee code must be unique

acme.validation.trackingLog.notPendingStatus.message 			= The status must not be pending if the resolution percentage has reached 100%
acme.validation.trackingLog.pendingStatus.message				= The status must be pending if the resolution percentage has not reached 100%
acme.validation.trackingLog.resolution.message					= The resolution is mandatory if the claim has already been accepted or rejected
acme.validation.trackingLog.resolutionPercentage.message 		= The resolution percentage must be monotonically increasing
acme.validation.trackingLog.lastUpdateMoment.message			= The last update moment must not be before the creation moment
acme.validation.trackingLog.isPublished.message					= The tracking log cannot be published until its associated claim has been published
acme.validation.trackingLog.reclaimed.noCompletedLog.message	= There must be a published completed tracking log for a claim before reclaiming it
acme.validation.trackingLog.creationMoment.message				= The creation moment of a tracking log cannot be before that of the claim to which it is associated
acme.validation.trackingLog.reclaimed.status.message			= A reclaimed tracking log must have the same status as the previous completed tracking log
acme.validation.trackingLog.completedNumber.message				= There cannot be more than two completed tracking logs for the same claim

acme.validation.service.promotioncode.message 				= The promotion code year must be according to the current year
acme.validation.service.promotioncodeuniqueness.message 	= The promotion code is not unique
acme.validation.flightcrewmember.employeecode.message 		= The employee code first two letters must match the employee's name and surname initials
acme.validation.bannedPassenger.issuedAt.message 					= The issue date must be after the birth date of the passenger
acme.validation.bannedPassenger.liftedAt.message 					= The lifting date must be after the issue date

acme.validation.flightcrewmember.uniqueemployeecode.message = The employee code is already in use
acme.validation.customer.issuedAt.message 					= The issue date must be after the birth date of the passenger
acme.validation.customer.liftedAt.message 					= The lifting date must be after the issue date

acme.validation.flightLeg.scheduledDates.message = The scheduled departure must be before the scheduled arrival
acme.validation.flightLeg.scheduledDates.message = The scheduled departure must be before the scheduled arrival
acme.validation.flightLeg.scheduledDeparture.message = The scheduled departure must be in the future
acme.validation.flightLeg.flightNumber.message = The flight number must begin with the airline's IATA code
acme.validation.flightLeg.flightNumberPattern.message = The flight number must contain 3 upper case letters and 4 digits
acme.validation.flightLeg.flightNumberUnique.message = The flight number must be unique

acme.validation.flight.overlappingDates.message = This flight has legs with overlapping dates
acme.validation.flight.notPublishedLeg.message = This flight has unpublished legs
acme.validation.flight.missingLegs.message = This flight does not have associated legs

acme.validation.airport.notUniqueIATA.message = This IATA code already exists
acme.validation.aircraft.registrationNumber.message			= The registration number must be unique


acme.validation.confirmation.message = You must confirm before performing this operation

acme.validation.claim.isPublished.message 			= You cannot publish a claim that has not been completed
acme.validation.claim.leg.message					= A claim cannot be linked to an unpublished leg
acme.validation.claim.registrationMoment.message 	= A claim's registration moment cannot be before the arrival of the leg to which it is associated

acme.validation.realm.identifierPattern.message = The identifier must include 2-3 upper case letters and 6 digits.

<<<<<<< HEAD
acme.validation.recommendation.uniquePlaceId.message = The place identifier must be unique.
=======
acme.validation.systemConfiguration.systemCurrency.message = Should be a three-letters currency code.
acme.validation.systemConfiguration.acceptedCurrencies.message = Should be a list of three-letters currency codes separated by commas.
>>>>>>> task057
